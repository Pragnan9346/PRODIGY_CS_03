import re

def assess_password_strength(password):
    """
    Assesses the strength of a password based on length, presence of uppercase and lowercase letters,
    numbers, and special characters.
    
    Parameters:
        password (str): The password to be assessed.
    
    Returns:
        str: Feedback on the password's strength.
    """
    # Criteria for password strength
    length_criteria = len(password) >= 8
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    number_criteria = bool(re.search(r'[0-9]', password))
    special_criteria = bool(re.search(r'[\W_]', password))

    # Determine strength
    score = sum([length_criteria, lowercase_criteria, uppercase_criteria, number_criteria, special_criteria])

    # Provide feedback based on the score
    if score == 5:
        return "Very Strong"
    elif score == 4:
        return "Strong"
    elif score == 3:
        return "Moderate"
    elif score == 2:
        return "Weak"
    else:
        return "Very Weak"

# Example usage
password = input("Enter a password to assess: ")
strength = assess_password_strength(password)
print(f"Password strength: {strength}")
